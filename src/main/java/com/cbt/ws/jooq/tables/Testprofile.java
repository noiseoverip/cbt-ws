/**
 * This class is generated by jOOQ
 */
package com.cbt.ws.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.1.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Testprofile extends org.jooq.impl.TableImpl<com.cbt.ws.jooq.tables.records.TestprofileRecord> {

	private static final long serialVersionUID = -1972634171;

	/**
	 * The singleton instance of <code>cbt.testprofile</code>
	 */
	public static final com.cbt.ws.jooq.tables.Testprofile TESTPROFILE = new com.cbt.ws.jooq.tables.Testprofile();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<com.cbt.ws.jooq.tables.records.TestprofileRecord> getRecordType() {
		return com.cbt.ws.jooq.tables.records.TestprofileRecord.class;
	}

	/**
	 * The column <code>cbt.testprofile.id</code>. 
	 */
	public final org.jooq.TableField<com.cbt.ws.jooq.tables.records.TestprofileRecord, java.lang.Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cbt.testprofile.user_id</code>. 
	 */
	public final org.jooq.TableField<com.cbt.ws.jooq.tables.records.TestprofileRecord, java.lang.Long> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cbt.testprofile.name</code>. 
	 */
	public final org.jooq.TableField<com.cbt.ws.jooq.tables.records.TestprofileRecord, java.lang.String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cbt.testprofile.mode</code>. simple, fast
	 */
	public final org.jooq.TableField<com.cbt.ws.jooq.tables.records.TestprofileRecord, com.cbt.ws.jooq.enums.TestprofileMode> MODE = createField("mode", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.cbt.ws.jooq.enums.TestprofileMode.class), this);

	/**
	 * The column <code>cbt.testprofile.updated</code>. 
	 */
	public final org.jooq.TableField<com.cbt.ws.jooq.tables.records.TestprofileRecord, java.sql.Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * The column <code>cbt.testprofile.metadata</code>. 
	 */
	public final org.jooq.TableField<com.cbt.ws.jooq.tables.records.TestprofileRecord, java.lang.String> METADATA = createField("metadata", org.jooq.impl.SQLDataType.CLOB, this);

	/**
	 * Create a <code>cbt.testprofile</code> table reference
	 */
	public Testprofile() {
		super("testprofile", com.cbt.ws.jooq.Cbt.CBT);
	}

	/**
	 * Create an aliased <code>cbt.testprofile</code> table reference
	 */
	public Testprofile(java.lang.String alias) {
		super(alias, com.cbt.ws.jooq.Cbt.CBT, com.cbt.ws.jooq.tables.Testprofile.TESTPROFILE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<com.cbt.ws.jooq.tables.records.TestprofileRecord, java.lang.Long> getIdentity() {
		return com.cbt.ws.jooq.Keys.IDENTITY_TESTPROFILE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.TestprofileRecord> getPrimaryKey() {
		return com.cbt.ws.jooq.Keys.KEY_TESTPROFILE_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.TestprofileRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.TestprofileRecord>>asList(com.cbt.ws.jooq.Keys.KEY_TESTPROFILE_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public com.cbt.ws.jooq.tables.Testprofile as(java.lang.String alias) {
		return new com.cbt.ws.jooq.tables.Testprofile(alias);
	}
}
