/**
 * This class is generated by jOOQ
 */
package com.cbt.ws.jooq;

/**
 * This class is generated by jOOQ.
 *
 * A class modelling foreign key relationships between tables of the <code>cbt</code> 
 * schema
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.1.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final org.jooq.Identity<com.cbt.ws.jooq.tables.records.DeviceRecord, java.lang.Long> IDENTITY_DEVICE = Identities0.IDENTITY_DEVICE;
	public static final org.jooq.Identity<com.cbt.ws.jooq.tables.records.DeviceJobRecord, java.lang.Long> IDENTITY_DEVICE_JOB = Identities0.IDENTITY_DEVICE_JOB;
	public static final org.jooq.Identity<com.cbt.ws.jooq.tables.records.DeviceJobResultRecord, java.lang.Long> IDENTITY_DEVICE_JOB_RESULT = Identities0.IDENTITY_DEVICE_JOB_RESULT;
	public static final org.jooq.Identity<com.cbt.ws.jooq.tables.records.DeviceOsRecord, java.lang.Long> IDENTITY_DEVICE_OS = Identities0.IDENTITY_DEVICE_OS;
	public static final org.jooq.Identity<com.cbt.ws.jooq.tables.records.DeviceSharingRecord, java.lang.Long> IDENTITY_DEVICE_SHARING = Identities0.IDENTITY_DEVICE_SHARING;
	public static final org.jooq.Identity<com.cbt.ws.jooq.tables.records.DeviceTypeRecord, java.lang.Long> IDENTITY_DEVICE_TYPE = Identities0.IDENTITY_DEVICE_TYPE;
	public static final org.jooq.Identity<com.cbt.ws.jooq.tables.records.ResultsRecord, java.lang.Long> IDENTITY_RESULTS = Identities0.IDENTITY_RESULTS;
	public static final org.jooq.Identity<com.cbt.ws.jooq.tables.records.TestconfigRecord, java.lang.Long> IDENTITY_TESTCONFIG = Identities0.IDENTITY_TESTCONFIG;
	public static final org.jooq.Identity<com.cbt.ws.jooq.tables.records.TestprofileRecord, java.lang.Long> IDENTITY_TESTPROFILE = Identities0.IDENTITY_TESTPROFILE;
	public static final org.jooq.Identity<com.cbt.ws.jooq.tables.records.TestprofileDevicesRecord, java.lang.Integer> IDENTITY_TESTPROFILE_DEVICES = Identities0.IDENTITY_TESTPROFILE_DEVICES;
	public static final org.jooq.Identity<com.cbt.ws.jooq.tables.records.TestrunRecord, java.lang.Long> IDENTITY_TESTRUN = Identities0.IDENTITY_TESTRUN;
	public static final org.jooq.Identity<com.cbt.ws.jooq.tables.records.TestscriptRecord, java.lang.Long> IDENTITY_TESTSCRIPT = Identities0.IDENTITY_TESTSCRIPT;
	public static final org.jooq.Identity<com.cbt.ws.jooq.tables.records.TesttargetRecord, java.lang.Long> IDENTITY_TESTTARGET = Identities0.IDENTITY_TESTTARGET;
	public static final org.jooq.Identity<com.cbt.ws.jooq.tables.records.UserRecord, java.lang.Long> IDENTITY_USER = Identities0.IDENTITY_USER;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.DeviceRecord> KEY_DEVICE_PRIMARY = UniqueKeys0.KEY_DEVICE_PRIMARY;
	public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.DeviceRecord> KEY_DEVICE_DEVICEUNIQUE_ID = UniqueKeys0.KEY_DEVICE_DEVICEUNIQUE_ID;
	public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.DeviceJobRecord> KEY_DEVICE_JOB_PRIMARY = UniqueKeys0.KEY_DEVICE_JOB_PRIMARY;
	public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.DeviceJobResultRecord> KEY_DEVICE_JOB_RESULT_PRIMARY = UniqueKeys0.KEY_DEVICE_JOB_RESULT_PRIMARY;
	public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.DeviceOsRecord> KEY_DEVICE_OS_PRIMARY = UniqueKeys0.KEY_DEVICE_OS_PRIMARY;
	public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.DeviceSharingRecord> KEY_DEVICE_SHARING_PRIMARY = UniqueKeys0.KEY_DEVICE_SHARING_PRIMARY;
	public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.DeviceSharingRecord> KEY_DEVICE_SHARING_DEVICE_ID = UniqueKeys0.KEY_DEVICE_SHARING_DEVICE_ID;
	public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.DeviceTypeRecord> KEY_DEVICE_TYPE_PRIMARY = UniqueKeys0.KEY_DEVICE_TYPE_PRIMARY;
	public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.ResultsRecord> KEY_RESULTS_PRIMARY = UniqueKeys0.KEY_RESULTS_PRIMARY;
	public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.TestconfigRecord> KEY_TESTCONFIG_PRIMARY = UniqueKeys0.KEY_TESTCONFIG_PRIMARY;
	public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.TestprofileRecord> KEY_TESTPROFILE_PRIMARY = UniqueKeys0.KEY_TESTPROFILE_PRIMARY;
	public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.TestprofileDevicesRecord> KEY_TESTPROFILE_DEVICES_PRIMARY = UniqueKeys0.KEY_TESTPROFILE_DEVICES_PRIMARY;
	public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.TestprofileDevicesRecord> KEY_TESTPROFILE_DEVICES_TESTPROFILE_ID = UniqueKeys0.KEY_TESTPROFILE_DEVICES_TESTPROFILE_ID;
	public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.TestrunRecord> KEY_TESTRUN_PRIMARY = UniqueKeys0.KEY_TESTRUN_PRIMARY;
	public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.TestscriptRecord> KEY_TESTSCRIPT_PRIMARY = UniqueKeys0.KEY_TESTSCRIPT_PRIMARY;
	public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.TesttargetRecord> KEY_TESTTARGET_PRIMARY = UniqueKeys0.KEY_TESTTARGET_PRIMARY;
	public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.UserRecord> KEY_USER_PRIMARY = UniqueKeys0.KEY_USER_PRIMARY;
	public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.UserRecord> KEY_USER_NAME = UniqueKeys0.KEY_USER_NAME;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	public static final org.jooq.ForeignKey<com.cbt.ws.jooq.tables.records.TestrunRecord, com.cbt.ws.jooq.tables.records.TestconfigRecord> TESTRUN_IBFK_1 = ForeignKeys0.TESTRUN_IBFK_1;

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends org.jooq.impl.AbstractKeys {
		public static org.jooq.Identity<com.cbt.ws.jooq.tables.records.DeviceRecord, java.lang.Long> IDENTITY_DEVICE = createIdentity(com.cbt.ws.jooq.tables.Device.DEVICE, com.cbt.ws.jooq.tables.Device.DEVICE.ID);
		public static org.jooq.Identity<com.cbt.ws.jooq.tables.records.DeviceJobRecord, java.lang.Long> IDENTITY_DEVICE_JOB = createIdentity(com.cbt.ws.jooq.tables.DeviceJob.DEVICE_JOB, com.cbt.ws.jooq.tables.DeviceJob.DEVICE_JOB.ID);
		public static org.jooq.Identity<com.cbt.ws.jooq.tables.records.DeviceJobResultRecord, java.lang.Long> IDENTITY_DEVICE_JOB_RESULT = createIdentity(com.cbt.ws.jooq.tables.DeviceJobResult.DEVICE_JOB_RESULT, com.cbt.ws.jooq.tables.DeviceJobResult.DEVICE_JOB_RESULT.DEVICEJOBRESULT_ID);
		public static org.jooq.Identity<com.cbt.ws.jooq.tables.records.DeviceOsRecord, java.lang.Long> IDENTITY_DEVICE_OS = createIdentity(com.cbt.ws.jooq.tables.DeviceOs.DEVICE_OS, com.cbt.ws.jooq.tables.DeviceOs.DEVICE_OS.DEVICEOS_ID);
		public static org.jooq.Identity<com.cbt.ws.jooq.tables.records.DeviceSharingRecord, java.lang.Long> IDENTITY_DEVICE_SHARING = createIdentity(com.cbt.ws.jooq.tables.DeviceSharing.DEVICE_SHARING, com.cbt.ws.jooq.tables.DeviceSharing.DEVICE_SHARING.DEVICE_SHARING_ID);
		public static org.jooq.Identity<com.cbt.ws.jooq.tables.records.DeviceTypeRecord, java.lang.Long> IDENTITY_DEVICE_TYPE = createIdentity(com.cbt.ws.jooq.tables.DeviceType.DEVICE_TYPE, com.cbt.ws.jooq.tables.DeviceType.DEVICE_TYPE.ID);
		public static org.jooq.Identity<com.cbt.ws.jooq.tables.records.ResultsRecord, java.lang.Long> IDENTITY_RESULTS = createIdentity(com.cbt.ws.jooq.tables.Results.RESULTS, com.cbt.ws.jooq.tables.Results.RESULTS.RESULT_ID);
		public static org.jooq.Identity<com.cbt.ws.jooq.tables.records.TestconfigRecord, java.lang.Long> IDENTITY_TESTCONFIG = createIdentity(com.cbt.ws.jooq.tables.Testconfig.TESTCONFIG, com.cbt.ws.jooq.tables.Testconfig.TESTCONFIG.TEST_CONFIG_ID);
		public static org.jooq.Identity<com.cbt.ws.jooq.tables.records.TestprofileRecord, java.lang.Long> IDENTITY_TESTPROFILE = createIdentity(com.cbt.ws.jooq.tables.Testprofile.TESTPROFILE, com.cbt.ws.jooq.tables.Testprofile.TESTPROFILE.ID);
		public static org.jooq.Identity<com.cbt.ws.jooq.tables.records.TestprofileDevicesRecord, java.lang.Integer> IDENTITY_TESTPROFILE_DEVICES = createIdentity(com.cbt.ws.jooq.tables.TestprofileDevices.TESTPROFILE_DEVICES, com.cbt.ws.jooq.tables.TestprofileDevices.TESTPROFILE_DEVICES.ID);
		public static org.jooq.Identity<com.cbt.ws.jooq.tables.records.TestrunRecord, java.lang.Long> IDENTITY_TESTRUN = createIdentity(com.cbt.ws.jooq.tables.Testrun.TESTRUN, com.cbt.ws.jooq.tables.Testrun.TESTRUN.ID);
		public static org.jooq.Identity<com.cbt.ws.jooq.tables.records.TestscriptRecord, java.lang.Long> IDENTITY_TESTSCRIPT = createIdentity(com.cbt.ws.jooq.tables.Testscript.TESTSCRIPT, com.cbt.ws.jooq.tables.Testscript.TESTSCRIPT.ID);
		public static org.jooq.Identity<com.cbt.ws.jooq.tables.records.TesttargetRecord, java.lang.Long> IDENTITY_TESTTARGET = createIdentity(com.cbt.ws.jooq.tables.Testtarget.TESTTARGET, com.cbt.ws.jooq.tables.Testtarget.TESTTARGET.ID);
		public static org.jooq.Identity<com.cbt.ws.jooq.tables.records.UserRecord, java.lang.Long> IDENTITY_USER = createIdentity(com.cbt.ws.jooq.tables.User.USER, com.cbt.ws.jooq.tables.User.USER.ID);
	}

	private static class UniqueKeys0 extends org.jooq.impl.AbstractKeys {
		public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.DeviceRecord> KEY_DEVICE_PRIMARY = createUniqueKey(com.cbt.ws.jooq.tables.Device.DEVICE, com.cbt.ws.jooq.tables.Device.DEVICE.ID);
		public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.DeviceRecord> KEY_DEVICE_DEVICEUNIQUE_ID = createUniqueKey(com.cbt.ws.jooq.tables.Device.DEVICE, com.cbt.ws.jooq.tables.Device.DEVICE.DEVICE_UNIQUE_ID);
		public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.DeviceJobRecord> KEY_DEVICE_JOB_PRIMARY = createUniqueKey(com.cbt.ws.jooq.tables.DeviceJob.DEVICE_JOB, com.cbt.ws.jooq.tables.DeviceJob.DEVICE_JOB.ID);
		public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.DeviceJobResultRecord> KEY_DEVICE_JOB_RESULT_PRIMARY = createUniqueKey(com.cbt.ws.jooq.tables.DeviceJobResult.DEVICE_JOB_RESULT, com.cbt.ws.jooq.tables.DeviceJobResult.DEVICE_JOB_RESULT.DEVICEJOBRESULT_ID);
		public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.DeviceOsRecord> KEY_DEVICE_OS_PRIMARY = createUniqueKey(com.cbt.ws.jooq.tables.DeviceOs.DEVICE_OS, com.cbt.ws.jooq.tables.DeviceOs.DEVICE_OS.DEVICEOS_ID);
		public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.DeviceSharingRecord> KEY_DEVICE_SHARING_PRIMARY = createUniqueKey(com.cbt.ws.jooq.tables.DeviceSharing.DEVICE_SHARING, com.cbt.ws.jooq.tables.DeviceSharing.DEVICE_SHARING.DEVICE_SHARING_ID);
		public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.DeviceSharingRecord> KEY_DEVICE_SHARING_DEVICE_ID = createUniqueKey(com.cbt.ws.jooq.tables.DeviceSharing.DEVICE_SHARING, com.cbt.ws.jooq.tables.DeviceSharing.DEVICE_SHARING.DEVICE_ID, com.cbt.ws.jooq.tables.DeviceSharing.DEVICE_SHARING.USER_ID);
		public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.DeviceTypeRecord> KEY_DEVICE_TYPE_PRIMARY = createUniqueKey(com.cbt.ws.jooq.tables.DeviceType.DEVICE_TYPE, com.cbt.ws.jooq.tables.DeviceType.DEVICE_TYPE.ID);
		public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.ResultsRecord> KEY_RESULTS_PRIMARY = createUniqueKey(com.cbt.ws.jooq.tables.Results.RESULTS, com.cbt.ws.jooq.tables.Results.RESULTS.RESULT_ID);
		public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.TestconfigRecord> KEY_TESTCONFIG_PRIMARY = createUniqueKey(com.cbt.ws.jooq.tables.Testconfig.TESTCONFIG, com.cbt.ws.jooq.tables.Testconfig.TESTCONFIG.TEST_CONFIG_ID);
		public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.TestprofileRecord> KEY_TESTPROFILE_PRIMARY = createUniqueKey(com.cbt.ws.jooq.tables.Testprofile.TESTPROFILE, com.cbt.ws.jooq.tables.Testprofile.TESTPROFILE.ID);
		public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.TestprofileDevicesRecord> KEY_TESTPROFILE_DEVICES_PRIMARY = createUniqueKey(com.cbt.ws.jooq.tables.TestprofileDevices.TESTPROFILE_DEVICES, com.cbt.ws.jooq.tables.TestprofileDevices.TESTPROFILE_DEVICES.ID);
		public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.TestprofileDevicesRecord> KEY_TESTPROFILE_DEVICES_TESTPROFILE_ID = createUniqueKey(com.cbt.ws.jooq.tables.TestprofileDevices.TESTPROFILE_DEVICES, com.cbt.ws.jooq.tables.TestprofileDevices.TESTPROFILE_DEVICES.TESTPROFILE_ID, com.cbt.ws.jooq.tables.TestprofileDevices.TESTPROFILE_DEVICES.DEVICETYPE_ID);
		public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.TestrunRecord> KEY_TESTRUN_PRIMARY = createUniqueKey(com.cbt.ws.jooq.tables.Testrun.TESTRUN, com.cbt.ws.jooq.tables.Testrun.TESTRUN.ID);
		public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.TestscriptRecord> KEY_TESTSCRIPT_PRIMARY = createUniqueKey(com.cbt.ws.jooq.tables.Testscript.TESTSCRIPT, com.cbt.ws.jooq.tables.Testscript.TESTSCRIPT.ID);
		public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.TesttargetRecord> KEY_TESTTARGET_PRIMARY = createUniqueKey(com.cbt.ws.jooq.tables.Testtarget.TESTTARGET, com.cbt.ws.jooq.tables.Testtarget.TESTTARGET.ID);
		public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.UserRecord> KEY_USER_PRIMARY = createUniqueKey(com.cbt.ws.jooq.tables.User.USER, com.cbt.ws.jooq.tables.User.USER.ID);
		public static final org.jooq.UniqueKey<com.cbt.ws.jooq.tables.records.UserRecord> KEY_USER_NAME = createUniqueKey(com.cbt.ws.jooq.tables.User.USER, com.cbt.ws.jooq.tables.User.USER.NAME);
	}

	private static class ForeignKeys0 extends org.jooq.impl.AbstractKeys {
		public static final org.jooq.ForeignKey<com.cbt.ws.jooq.tables.records.TestrunRecord, com.cbt.ws.jooq.tables.records.TestconfigRecord> TESTRUN_IBFK_1 = createForeignKey(com.cbt.ws.jooq.Keys.KEY_TESTCONFIG_PRIMARY, com.cbt.ws.jooq.tables.Testrun.TESTRUN, com.cbt.ws.jooq.tables.Testrun.TESTRUN.TEST_CONFIG_ID);
	}
}
