<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.cbt</groupId>
	<artifactId>cbt-ws</artifactId>
	<packaging>jar</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>cbt-ws</name>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<mysql.connector.version>5.1.17</mysql.connector.version>
		<jooq.version>3.1.0</jooq.version>
		<c3p0.version>0.9.1.2</c3p0.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.jf.dexlib</groupId>
			<artifactId>baksmali</artifactId>
			<version>1.4.2</version>
		</dependency>
		<dependency>
			<groupId>com.cbt</groupId>
			<artifactId>cbt-ws-dao</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
			<version>8.1.9.v20130131</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.connector.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.jersey-test-framework</groupId>
			<artifactId>jersey-test-framework-grizzly2</artifactId>
			<version>1.9.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
			<version>1.9.1</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-json-provider</artifactId>
			<version>2.1.1</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-guice</artifactId>
			<version>1.9.1</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-multipart</artifactId>
			<version>1.9.1</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
		</dependency>
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq</artifactId>
			<version>${jooq.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq-meta</artifactId>
			<version>${jooq.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq-codegen</artifactId>
			<version>${jooq.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>14.0.1</version>
		</dependency>
		<dependency>
			<groupId>c3p0</groupId>
			<artifactId>c3p0</artifactId>
			<version>${c3p0.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<finalName>cbt-web-service</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<warName>cbt-ws</warName>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>8.0.0.RC0</version>
				<configuration>
					<contextHandlers>
						<contextHandler implementation="org.eclipse.jetty.webapp.WebAppContext">
							<contextPath>/static</contextPath>
							<resourceBase>src/main/webapp/static</resourceBase>
						</contextHandler>
					</contextHandlers>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<mainClass>com.cbt.ws.main.Main</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.properties</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>**/*.properties</exclude>
				</excludes>
			</resource>
		</resources>
	</build>
	<profiles>
		<profile>
			<id>setupProductionDbSchema</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<version>1.5</version>
						<dependencies>
							<dependency>
								<groupId>mysql</groupId>
								<artifactId>mysql-connector-java</artifactId>
								<version>${mysql.connector.version}</version>
							</dependency>
						</dependencies>
						<configuration>
							<driver>com.mysql.jdbc.Driver</driver>
							<url>${cbt.db.url}</url>
							<username>${cbt.db.user}</username>
							<password>${cbt.db.password}</password>
							<settingsKey>sensibleKey</settingsKey>
						</configuration>
						<executions>
							<execution>
								<id>create-schema</id>
								<phase>initialize</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<autocommit>true</autocommit>
									<srcFiles>
										<srcFile>src/main/resources/cbt.sql</srcFile>
									</srcFiles>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>prepareForTest</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>2.14.1</version>
						<configuration>
							<systemPropertyVariables>
								<cbt.run.mode>integration</cbt.run.mode>
							</systemPropertyVariables>							
						</configuration>
						<executions>
							<execution>
								<id>failsafe-integration-tests</id>
								<phase>integration-test</phase>
								<goals>
									<goal>integration-test</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<version>1.5</version>

						<dependencies>
							<!-- specify the dependent jdbc driver here -->
							<dependency>
								<groupId>mysql</groupId>
								<artifactId>mysql-connector-java</artifactId>
								<version>${mysql.connector.version}</version>
							</dependency>
						</dependencies>

						<!-- common configuration shared by all executions -->
						<configuration>
							<driver>com.mysql.jdbc.Driver</driver>
							<url>${cbt.dbtest.url}</url>
							<username>${cbt.dbtest.user}</username>
							<password>${cbt.dbtest.password}</password>
							<settingsKey>sensibleKey</settingsKey>
							<!--all executions are ignored if -Dmaven.test.skip=true -->
							<skip>${maven.test.skip}</skip>
						</configuration>

						<executions>
							<!-- <execution> -->
							<!-- <id>drop-db-before-test-if-any</id> -->
							<!-- <phase>process-test-resources</phase> -->
							<!-- <goals> -->
							<!-- <goal>execute</goal> -->
							<!-- </goals> -->
							<!-- <configuration> -->
							<!-- Need to use existing db, otherwise will get error -->
							<!-- <url>${cbt.dbbootstrap.url}</url> -->
							<!-- <autocommit>true</autocommit> -->
							<!-- <sqlCommand>drop database if exists ${cbt.db.name}</sqlCommand> -->
							<!-- ignore error when database is not available -->
							<!-- <onError>continue</onError> -->
							<!-- </configuration> -->
							<!-- </execution> -->

							<execution>
								<id>create-db</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<!-- Need to use existing db, otherwise will get error -->
									<url>${cbt.dbbootstrap.url}</url>
									<!-- no transaction -->
									<autocommit>true</autocommit>
									<sqlCommand>create database ${cbt.dbtest.name}</sqlCommand>
								</configuration>
							</execution>

							<execution>
								<id>create-schema</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<autocommit>true</autocommit>
									<srcFiles>
										<srcFile>src/test/resources/cbt-test.sql</srcFile>
									</srcFiles>
								</configuration>
							</execution>

							<execution>
								<id>create-data</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<orderFile>ascending</orderFile>
									<fileset>
										<basedir>${basedir}</basedir>
										<includes>
											<include>src/test/resources/cbt-test-data.sql</include>
										</includes>
									</fileset>
								</configuration>
							</execution>

							<!-- drop db after test -->
							<execution>
								<id>drop-db-after-test</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<autocommit>true</autocommit>
									<sqlCommand>drop database ${cbt.dbtest.name}</sqlCommand>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>jooqgenerate</id>
			<build>
				<plugins>
					<plugin>
						<!-- Specify the maven code generator plugin -->
						<groupId>org.jooq</groupId>
						<artifactId>jooq-codegen-maven</artifactId>
						<version>${jooq.version}</version>

						<!-- The plugin should hook into the generate goal -->
						<executions>
							<execution>
								<id>jooq-generate-classes</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>generate</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>mysql</groupId>
								<artifactId>mysql-connector-java</artifactId>
								<version>${mysql.connector.version}</version>
							</dependency>
						</dependencies>

						<!-- Specify the plugin configuration -->
						<configuration>

							<!-- JDBC connection parameters -->
							<jdbc>
								<driver>com.mysql.jdbc.Driver</driver>
								<url>${cbt.dbtest.url}</url>
								<user>${cbt.dbtest.user}</user>
								<password>${cbt.dbtest.password}</password>
							</jdbc>

							<!-- Generator parameters -->
							<generator>
								<name>org.jooq.util.DefaultGenerator</name>
								<database>
									<name>org.jooq.util.mysql.MySQLDatabase</name>
									<includes>.*</includes>
									<excludes />
									<inputSchema>${cbt.dbtest.name}</inputSchema>
									<outputSchema>cbt</outputSchema> 
								</database>
								
								<generate>
									<relations>true</relations>
									<deprecated>false</deprecated>
								</generate>
								<target>
									<packageName>com.cbt.ws.jooq</packageName>
									<directory>src/main/java</directory>
								</target>
							</generator>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
